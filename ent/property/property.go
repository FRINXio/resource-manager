// Code generated by entc, DO NOT EDIT.

package property

import (
	"entgo.io/ent"
)

const (
	// Label holds the string label denoting the property type in the database.
	Label = "property"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIntVal holds the string denoting the int_val field in the database.
	FieldIntVal = "int_val"
	// FieldBoolVal holds the string denoting the bool_val field in the database.
	FieldBoolVal = "bool_val"
	// FieldFloatVal holds the string denoting the float_val field in the database.
	FieldFloatVal = "float_val"
	// FieldLatitudeVal holds the string denoting the latitude_val field in the database.
	FieldLatitudeVal = "latitude_val"
	// FieldLongitudeVal holds the string denoting the longitude_val field in the database.
	FieldLongitudeVal = "longitude_val"
	// FieldRangeFromVal holds the string denoting the range_from_val field in the database.
	FieldRangeFromVal = "range_from_val"
	// FieldRangeToVal holds the string denoting the range_to_val field in the database.
	FieldRangeToVal = "range_to_val"
	// FieldStringVal holds the string denoting the string_val field in the database.
	FieldStringVal = "string_val"
	// EdgeType holds the string denoting the type edge name in mutations.
	EdgeType = "type"
	// EdgeResources holds the string denoting the resources edge name in mutations.
	EdgeResources = "resources"
	// Table holds the table name of the property in the database.
	Table = "properties"
	// TypeTable is the table that holds the type relation/edge.
	TypeTable = "properties"
	// TypeInverseTable is the table name for the PropertyType entity.
	// It exists in this package in order to avoid circular dependency with the "propertytype" package.
	TypeInverseTable = "property_types"
	// TypeColumn is the table column denoting the type relation/edge.
	TypeColumn = "property_type"
	// ResourcesTable is the table that holds the resources relation/edge.
	ResourcesTable = "properties"
	// ResourcesInverseTable is the table name for the Resource entity.
	// It exists in this package in order to avoid circular dependency with the "resource" package.
	ResourcesInverseTable = "resources"
	// ResourcesColumn is the table column denoting the resources relation/edge.
	ResourcesColumn = "resource_properties"
)

// Columns holds all SQL columns for property fields.
var Columns = []string{
	FieldID,
	FieldIntVal,
	FieldBoolVal,
	FieldFloatVal,
	FieldLatitudeVal,
	FieldLongitudeVal,
	FieldRangeFromVal,
	FieldRangeToVal,
	FieldStringVal,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "properties"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"pool_properties_properties",
	"property_type",
	"resource_properties",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

// Note that the variables below are initialized by the runtime
// package on the initialization of the application. Therefore,
// it should be imported in the main as follows:
//
//	import _ "github.com/net-auto/resourceManager/ent/runtime"
var (
	Hooks  [1]ent.Hook
	Policy ent.Policy
)
