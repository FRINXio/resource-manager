// Code generated by entc, DO NOT EDIT.

package ent

import (
	"github.com/net-auto/resourceManager/ent/allocationstrategy"
	"github.com/net-auto/resourceManager/ent/label"
	"github.com/net-auto/resourceManager/ent/propertytype"
	"github.com/net-auto/resourceManager/ent/resource"
	"github.com/net-auto/resourceManager/ent/resourcepool"
	"github.com/net-auto/resourceManager/ent/resourcetype"
	"github.com/net-auto/resourceManager/ent/schema"
)

// The init function reads all schema descriptors with runtime
// code (default values, validators or hooks) and stitches it
// to their package variables.
func init() {
	allocationstrategyFields := schema.AllocationStrategy{}.Fields()
	_ = allocationstrategyFields
	// allocationstrategyDescName is the schema descriptor for name field.
	allocationstrategyDescName := allocationstrategyFields[0].Descriptor()
	// allocationstrategy.NameValidator is a validator for the "name" field. It is called by the builders before save.
	allocationstrategy.NameValidator = allocationstrategyDescName.Validators[0].(func(string) error)
	// allocationstrategyDescScript is the schema descriptor for script field.
	allocationstrategyDescScript := allocationstrategyFields[2].Descriptor()
	// allocationstrategy.ScriptValidator is a validator for the "script" field. It is called by the builders before save.
	allocationstrategy.ScriptValidator = allocationstrategyDescScript.Validators[0].(func(string) error)
	labelFields := schema.Label{}.Fields()
	_ = labelFields
	// labelDescLabl is the schema descriptor for labl field.
	labelDescLabl := labelFields[0].Descriptor()
	// label.LablValidator is a validator for the "labl" field. It is called by the builders before save.
	label.LablValidator = labelDescLabl.Validators[0].(func(string) error)
	propertytypeFields := schema.PropertyType{}.Fields()
	_ = propertytypeFields
	// propertytypeDescIsInstanceProperty is the schema descriptor for is_instance_property field.
	propertytypeDescIsInstanceProperty := propertytypeFields[13].Descriptor()
	// propertytype.DefaultIsInstanceProperty holds the default value on creation for the is_instance_property field.
	propertytype.DefaultIsInstanceProperty = propertytypeDescIsInstanceProperty.Default.(bool)
	// propertytypeDescEditable is the schema descriptor for editable field.
	propertytypeDescEditable := propertytypeFields[14].Descriptor()
	// propertytype.DefaultEditable holds the default value on creation for the editable field.
	propertytype.DefaultEditable = propertytypeDescEditable.Default.(bool)
	// propertytypeDescMandatory is the schema descriptor for mandatory field.
	propertytypeDescMandatory := propertytypeFields[15].Descriptor()
	// propertytype.DefaultMandatory holds the default value on creation for the mandatory field.
	propertytype.DefaultMandatory = propertytypeDescMandatory.Default.(bool)
	// propertytypeDescDeleted is the schema descriptor for deleted field.
	propertytypeDescDeleted := propertytypeFields[16].Descriptor()
	// propertytype.DefaultDeleted holds the default value on creation for the deleted field.
	propertytype.DefaultDeleted = propertytypeDescDeleted.Default.(bool)
	resourceFields := schema.Resource{}.Fields()
	_ = resourceFields
	// resourceDescClaimed is the schema descriptor for claimed field.
	resourceDescClaimed := resourceFields[0].Descriptor()
	// resource.DefaultClaimed holds the default value on creation for the claimed field.
	resource.DefaultClaimed = resourceDescClaimed.Default.(bool)
	resourcepoolFields := schema.ResourcePool{}.Fields()
	_ = resourcepoolFields
	// resourcepoolDescName is the schema descriptor for name field.
	resourcepoolDescName := resourcepoolFields[0].Descriptor()
	// resourcepool.NameValidator is a validator for the "name" field. It is called by the builders before save.
	resourcepool.NameValidator = resourcepoolDescName.Validators[0].(func(string) error)
	resourcetypeFields := schema.ResourceType{}.Fields()
	_ = resourcetypeFields
	// resourcetypeDescName is the schema descriptor for name field.
	resourcetypeDescName := resourcetypeFields[0].Descriptor()
	// resourcetype.NameValidator is a validator for the "name" field. It is called by the builders before save.
	resourcetype.NameValidator = resourcetypeDescName.Validators[0].(func(string) error)
}
