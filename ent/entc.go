//go:build ignore
// +build ignore

package main

import (
	"entgo.io/contrib/entgql"
	"entgo.io/ent/entc"
	"entgo.io/ent/entc/gen"
	"log"
)

func main() {

	storage, _ := gen.NewStorage("sql")

	ourTemplates, _ := gen.NewTemplate("our templates").
		Funcs(gen.Funcs).
		ParseFiles("template/instantiate.tmpl", "template/node_utils.tmpl", "template/readonly.tmpl", "template/tx.tmpl")

	err := entc.Generate("./schema", &gen.Config{
		Header: `
			// Code generated by entc, DO NOT EDIT.
		`,
		Storage:  storage,
		Features: []gen.Feature{gen.FeaturePrivacy, gen.FeatureSnapshot, gen.FeatureNamedEdges},

		Templates: []*gen.Template{
			ourTemplates,
			// Add templates from contrib as well to make sure all graphql required functions are also generated
			entgql.CollectionTemplate,
			entgql.EnumTemplate,
			entgql.NodeTemplate,
			entgql.PaginationTemplate,
			//entgql.TransactionTemplate,
			entgql.EdgeTemplate,
			entgql.MutationInputTemplate,
		},
	})
	if err != nil {
		log.Fatal("running ent codegen:", err)
	}
}
