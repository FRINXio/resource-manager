# Test pool hierarchies
# Creates following hierarchy of ipv4 prefixes with ips at the end

#                                            +---------------------------+
#                                           |                           |
#                                           |  Name: 10.0.0.0/8         |
#                                           |  Type: Ipv4Prefix         |
#                                           |  Allocation strategy:     |
#                                           |   split_ipv4_prefix_in_2  |
#                                           |                           |
#                                           +--------------+------------+
#                                                          |
#                                                          |
#                                +-------------------------+------------------------------+
#                                |                                                        |
#                                |                                                        |
#                 +--------------+------------+                        +------------------+----------------+
#                 |                           |                        |                                   |
#                 |  Name: 10.0.0.0/9         |                        |  Name: 10.128.0.0/9               |
#                 |  Type: Ipv4Prefix         |                        |  Type: Ipv4Prefix                 |
#                 |  Allocation strategy:     |                        |  Set:                             |
#                 |   split_ipv4_prefix_in_2  |                        |   [10.128.0.0/10, 10.192.0.0/10]  |
#                 |                           |                        |                                   |
#                 +-------------+-------------+                        +------------------+----------------+
#                               |                                                         |
#                               |                                                         |
#              +----------------+----------------+                                    +---+----------------------------------+
#              |                                 |                                    |                                      |
#              |                                 |                                    |                                      |
#+-------------+-------------+     +-------------+-------------+       +--------------+------------+           +-------------+-------------+
#|                           |     |                           |       |                           |           |                           |
#|  Name: 10.0.0.0/10        |     |  Name: 10.64.0.0/10       |       |  Name: 10.128.0.0/10      |           |  Name: 10.192.0.0/10      |
#|  Type: Ipv4Prefix         |     |  Type: Ipv4               |       |  Type: Ipv4               |           |  Type: Ipv4               |
#|  Singleton: 10.0.0.0/11   |     |  Allocation strategy:     |       |  Allocation strategy:     |           |  Allocation strategy:     |
#|                           |     |   ipv4_from_subnet        |       |   ipv4_from_subnet        |           |   ipv4_from_subnet        |
#|         # Unused          |     |                           |       |                           |           |                           |
#+---------------------------+     +---------------------------+       +---------------------------+           +---------------------------+

query QueryRT {
    QueryResourceTypes {
        id
        Name
        PropertyTypes {
            Name
            Type
        }
    }
}
query QueryStrats {
    QueryAllocationStrategies {
        id
        Name
        Lang
    }
}

mutation TestAllocationStrat_ipv4Prefix {
    TestAllocationStrategy(
        allocationStrategyId: 1,
        resourcePool: { ResourcePoolName: "10.0.0.0/8", poolValues: { prefix: 8, address: "10.0.0.0"}},
        currentResources: [],
        userInput: {desiredSize: 8388608})
}

mutation TestAllocationStrat_ipv4Prefix_2 {
    TestAllocationStrategy(
        allocationStrategyId: 1,
        resourcePool: { ResourcePoolName: "10.0.0.0/8", poolValues: { prefix: 8, address: "10.0.0.0"}},
        currentResources: [{Properties: { prefix: 9, address: "10.0.0.0"},
            Status: "claimed",
            UpdatedAt: "2020-08-18 11:38:48.0 +0200 CEST"
        }],
        userInput: {desiredSize: 8388608})
}

mutation TestAllocationStrat_ipv4Prefix_full {
    TestAllocationStrategy(
        allocationStrategyId: 1,
        resourcePool: { ResourcePoolName: "10.0.0.0/8", poolValues: { prefix: 8, address: "10.0.0.0"}},
        currentResources: [
            {Properties: { prefix: 9, address: "10.0.0.0"},
                Status: "claimed",
                UpdatedAt: "2020-08-18 11:38:48.0 +0200 CEST"
            },
            {Properties: { prefix: 9, address: "10.128.0.0"},
                Status: "claimed",
                UpdatedAt: "2020-08-18 11:38:48.0 +0200 CEST"
            }],
        userInput: {desiredSize: 2})
}

mutation TestIpv4AddrAllocationStrat_1 {
    TestAllocationStrategy(
        allocationStrategyId: 2,
        resourcePool: { ResourcePoolName: "10.0.0.0/8", poolValues: { prefix: 8, address: "10.0.0.0"} },
        currentResources: [],
        userInput: {})
}

# Root pool
mutation CreateRootPool_allocating {
    CreateAllocatingPool(input: {
        resourceTypeId: 25769803776,
        poolName: "rootpool10.0.0.0/8",
        allocationStrategyId: 1,
        poolDealocationSafetyPeriod: 0,
        poolPropertyTypes: {
            prefix: "int",
            address: "string"
        },
        poolProperties: {prefix: 8, address: "10.0.0.0"},}
    ){
        pool {
            id
        }
    }
}

# Pool 10.0.0.0/9 on level #2
mutation ClaimResourceFromRoot {
    ClaimResource(poolId:21474836480, userInput: {desiredSize: 8388608}) {
        id
        Properties
    }
}

mutation CreateLevel2Pool1_allocating {
    CreateNestedAllocatingPool(input: {
        resourceTypeId: 25769803776,
        poolName: "level1firstpool10.0.0.0/9",
        allocationStrategyId: 1,
        poolDealocationSafetyPeriod: 0,
        parentResourceId: 17179869184
    }
    ){
        pool {
            id
        }
    }
}

# Pool 10.128.0.0/9 on level #2
mutation ClaimResourceFromRoot {
    ClaimResource(poolId:21474836480, userInput: {desiredSize: 8388608}) {
        id
        Properties
    }
}

mutation CreateLevel2Pool2_set {
    CreateNestedSetPool(input: {
        resourceTypeId: 25769803776,
        poolName: "level2pool210.128.0.0/9",
        poolValues: [{address: "10.128.0.0", prefix: 10}, {address: "10.192.0.0", prefix: 10},],
        poolDealocationSafetyPeriod: 0,
        parentResourceId: 17179869185
    }
    ){
        pool {
            id
        }
    }
}

# Pool 10.0.0.0/10 on level #3
mutation ClaimResourceFromLevel2Pool1 {
    ClaimResource(poolId:21474836481, userInput: {desiredSize: 4194304}) {
        id
        Properties
    }
}

mutation CreateLevel3Pool1_singleton {
    CreateNestedSingletonPool(input: {
        resourceTypeId: 25769803776,
        poolName: "level3pool110.0.0.0/10",
        poolValues: [{address: "10.10.0.0", prefix: 11},],
        parentResourceId: 17179869188
    }
    ){
        pool {
            id
        }
    }
}

# Pool 10.64.0.0/10 on level #3
mutation ClaimResourceFromLevel2Pool1 {
    ClaimResource(poolId:21474836481, userInput: {desiredSize: 4194304}) {
        id
        Properties
    }
}

mutation CreateLevel3Pool2_allocating {
    CreateNestedAllocatingPool(input: {
        resourceTypeId: 25769803777,
        poolName: "level3pool210.64.0.0/10",
        allocationStrategyId: 2,
        poolDealocationSafetyPeriod: 0,
        parentResourceId: 17179869190
    }
    ){
        pool {
            id
        }
    }
}

mutation ClaimResourceFromLevel3Pool2_ips_from_10_64_0_0__10 {
    ClaimResource(poolId:21474836484, userInput: {}) {
        id
        Properties
    }
}

# Pool 10.128.0.0/10 on level #3
mutation ClaimResourceFromLevel2Pool2 {
    ClaimResource(poolId:21474836482, userInput: {}) {
        id
        Properties
    }
}

mutation CreateLevel3Pool3_allocating {
    CreateNestedAllocatingPool(input: {
        resourceTypeId: 25769803777,
        poolName: "level3pool310.128.0.0/10",
        allocationStrategyId: 2,
        poolDealocationSafetyPeriod: 0,
        parentResourceId: 17179869186
    }
    ){
        pool {
            id
        }
    }
}

mutation ClaimResourceFromLevel3Pool3_ips_from_10_128_0_0__10 {
    ClaimResource(poolId:21474836485, userInput: {}) {
        id
        Properties
    }
}

# Pool 10.192.0.0/10 on level #3
mutation ClaimResourceFromLevel2Pool2 {
    ClaimResource(poolId:21474836482, userInput: {}) {
        id
        Properties
    }
}

mutation CreateLevel3Pool4_allocating {
    CreateNestedAllocatingPool(input: {
        resourceTypeId: 25769803777,
        poolName: "level3pool410.192.0.0/10",
        allocationStrategyId: 2,
        poolDealocationSafetyPeriod: 0,
        parentResourceId: 17179869187
    }
    ){
        pool {
            id
        }
    }
}

mutation ClaimResourceFromLevel3Pool4_ips_from_10_92_0_0__10 {
    ClaimResource(poolId:21474836486, userInput: {}) {
        id
        Properties
    }
}

query QueryPoolHierarchy_3LevelsDeep {
    QueryResources(poolId: 21474836480) {
        # Resources from root pool
        id
        Properties

        # Level 2 pools
        NestedPool {
            id
            Name
            PoolType
            Resources {
                id
                Properties

                # Level 3 pools
                NestedPool {
                    id
                    Name
                    PoolType
                    Resources {
                        id
                        Properties
                    }
                }

            }
        }

    }
}

query QueryOnlyIpv4PrefixPools {
    QueryResourcePools(resourceTypeId: 25769803776) {
        id
        Name
    }
}

query QueryOnlyIpv4AddrPools {
    QueryResourcePools(resourceTypeId: 25769803777) {
        id
        Name
    }
}

query QueryIpv4PrefixRootPools {
    QueryRootResourcePools(resourceTypeId: 25769803776) {
        id
        Name
    }
}

query QueryIpv4AddressLeafPools {
    QueryLeafResourcePools(resourceTypeId: 25769803777) {
        id
        Name
    }
}

# TODO pool properties ? where does root pool store its root prefix ?