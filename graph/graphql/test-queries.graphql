mutation createNewResourceType {
    CreateResourceType(
        resourceName: "vlan",
        resourceProperties: {
            vlan: "int"
        }
    ) {
        ID
        Name
    }
}

mutation createComplexResourceType {
    CreateResourceType(
        resourceName: "complex",
        resourceProperties: {
            a: "int",
            b: "string"
        }
    ) {
        ID
        Name
    }
}

query queryResourceTypes {
    QueryResourceTypes{
        ID
        Name
        PropertyTypes {
            Name
            Type
        }
        Pools {
            ID
            Name
        }
    }
}

mutation createSetPool {
    CreateSetPool(
        resourceTypeId: 21474836480,
        poolName: "vlan_test4",
        poolValues: [{vlan: 13}, {vlan: 14},],
        poolDealocationSafetyPeriod: 0
    ){
        ID
        PoolType
        Name
    }
}

mutation createAllocationStratJs {
    CreateAllocationStrategy(
        name: "jstest",
        script: "function invoke() {log(\"log\");return {vlan: userInput.desiredVlan, respool: resourcePool.ResourcePoolName, currentRes: currentResources};}",
        lang: js

    ){
        ID
        Name
        Lang
        Script
    }
}

mutation createAllocationStratPy {
    CreateAllocationStrategy(
        name: "pytest",
        script: "log(\"log\")\nreturn {\"vlan\": userInput[\"desiredVlan\"], \"respool\": resourcePool[\"ResourcePoolName\"], \"currentRes\": currentResources}"
        lang: py
    ){
        ID
        Name
        Lang
        Script
    }
}

query queryAllocationStrategies {
    QueryAllocationStrategies {
        ID
        Lang
        Name
        Script
    }
}

mutation deleteAllocationStrategy {
    DeleteAllocationStrategy(allocationStrategyId: 0){
        Name
    }
}

mutation TestAllocationStrategyJs {
    TestAllocationStrategy(
        allocationStrategyId: 1,
        resourcePool: { ResourcePoolName: "testpool"},
        currentResources: [{Properties: { value:1}}, {Properties: {value: 100}}],
        userInput: {desiredVlan: 11})
}

mutation TestAllocationStrategyPy {
    TestAllocationStrategy(
        allocationStrategyId: 2,
        resourcePool: { ResourcePoolName: "testpool"},
        currentResources: [{Properties: { value:1}}, {Properties: {value: 100}}],
        userInput: {desiredVlan: 11})
}

query queryAllocationStrats {
    QueryAllocationStrategies{
        ID
        Name
        Lang
        Script
    }
}

mutation createAllocationPool {
    CreateAllocatingPool(
        resourceTypeId: 21474836480,
        poolName: "vlan_allocating",
        allocationStrategyId: 1,
        poolDealocationSafetyPeriod: 0
    ){
        ID
        PoolType
        Name
        AllocationStrategy {
            Name
        }
        ResourceType {
            Name
        }
    }
}

query QueryAllPools {
    QueryResourcePools{
        ID
        Name
        PoolType
        Tags {
            Tag
        }
        AllocationStrategy {
            Name
        }
        ResourceType {
            Name
        }
    }
}

mutation ClaimResource {
    ClaimResource(poolId:21474836480, userInput: {}) {
        ID
        Properties
    }
}

mutation ClaimResourceFromAllocatingPool {
    ClaimResource(poolId:21474836481, userInput: {desiredVlan: 14}) {
        ID
        Properties
    }
}

query QueryResources {
    QueryResources(poolId:21474836481){
        ID
        Properties
    }
}

mutation freeResource {
    FreeResource(
        poolId: 21474836481,
        input: {vlan: 10}
    )
}

mutation CreateTag {
    CreateTag(tag: "fb-connectivity") {
        ID
        Tag
    }
}

mutation CreateTag {
    CreateTag(tag: "tip") {
        ID
        Tag
    }
}

query Tags {
    QueryTags {
        ID
        Tag
        Pools {
            ID
            Name
        }
    }
}

mutation TagSetPoolWithFb {
    TagPool(tagId: 25769803776, poolId: 17179869184) {
        Tag
        Pools {
            ID
        }
    }
}

mutation TagSetPoolWithTip {
    TagPool(tagId: 25769803777, poolId: 17179869184) {
        Tag
    }
}

mutation UpdateTagTip {
    UpdateTag(tagId: 25769803777, tag: "tipIsTheBest") {
        ID
        Tag
    }
}

mutation TagAllocatingPoolWithTip {
    TagPool(tagId: 25769803777, poolId: 17179869185) {
        Tag
    }
}

query searchPoolsByBothTags {
    SearchPoolsByTags(tags: {matchesAny: [{matchesAll: ["fb-connectivity", "tipIsTheBest"]}]}) {
        ID
        Name
    }
}

query searchPoolsByOneOrTheOtherTag {
    SearchPoolsByTags(tags: {matchesAny: [{matchesAll: ["fb-connectivity"]}, {matchesAll: ["tipIsTheBest"]}]}) {
        ID
        Name
    }
}

query searchPoolsByTipTag {
    SearchPoolsByTags(tags: {matchesAny: [{matchesAll: ["tipIsTheBest"]}]}) {
        ID
        Name
    }
}

query searchPoolsByFbTag {
    SearchPoolsByTags(tags: {matchesAny: [{matchesAll: ["fb-connectivity"]}]}) {
        ID
        Name
    }
}

query deepQuery {
    QueryResourceTypes{
        ID
        Name
        PropertyTypes {
            Name
            Type
        }
        Pools {
            ID
            Name
            AllocationStrategy {
                ID
                Lang
                Name
            }
            PoolType
            Tags {
                ID
                Tag
            }
            Resources {
                ID
                Properties
            }
        }
    }
}

mutation deleteResourcePool {
    DeleteResourcePool(resourcePoolId:21474836481)
}

mutation deleteAllocationStrat {
    DeleteAllocationStrategy(
        allocationStrategyId: 1,
    ){
        Name
    }
}
