// Code generated by github.com/99designs/gqlgen, DO NOT EDIT.

package model

type CreateAllocatingPoolInput struct {
	ResourceTypeID              int     `json:"resourceTypeId"`
	PoolName                    string  `json:"poolName"`
	Description                 *string `json:"description"`
	AllocationStrategyID        int     `json:"allocationStrategyId"`
	PoolDealocationSafetyPeriod int     `json:"poolDealocationSafetyPeriod"`
}

type CreateSetPoolInput struct {
	ResourceTypeID              int                      `json:"resourceTypeId"`
	PoolName                    string                   `json:"poolName"`
	Description                 *string                  `json:"description"`
	PoolDealocationSafetyPeriod int                      `json:"poolDealocationSafetyPeriod"`
	PoolValues                  []map[string]interface{} `json:"poolValues"`
}

type CreateSingletonPoolInput struct {
	ResourceTypeID int                      `json:"resourceTypeId"`
	PoolName       string                   `json:"poolName"`
	Description    *string                  `json:"description"`
	PoolValues     []map[string]interface{} `json:"poolValues"`
}

type PropertyInput struct {
	Name      string   `json:"Name"`
	IntVal    *int     `json:"IntVal"`
	StringVal *string  `json:"StringVal"`
	FloatVal  *float64 `json:"FloatVal"`
	Type      string   `json:"Type"`
	Mandatory bool     `json:"Mandatory"`
}

type ResourceInput struct {
	Properties []*PropertyInput `json:"Properties"`
	UpdatedAt  string           `json:"UpdatedAt"`
	Status     string           `json:"Status"`
}

type ResourcePoolInput struct {
	ResourcePoolName string `json:"ResourcePoolName"`
}

type TagAnd struct {
	MatchesAll []string `json:"matchesAll"`
}

type TagOr struct {
	MatchesAny []*TagAnd `json:"matchesAny"`
}
